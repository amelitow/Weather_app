{"version":3,"sources":["../../src/native/index.ts","../../src/native/styled-components.ts","../../src/native/themes/main.ts","../../src/native/themes/index.ts","../../src/native/components/Button/index.tsx","../../src/native/components/Container/index.tsx","../../src/native/hoc/withScale.tsx","../../src/native/components/Icon/index.tsx","../../src/native/hooks/useTheme.ts","../../src/native/contexts/Theme.tsx","../../src/native/components/Input/index.tsx","../../src/native/components/Text/index.tsx","../../src/native/components/Provider/index.tsx"],"sourcesContent":["import styled from \"styled-components/native\";\n\n// ./styled-components\nexport * from \"./styled-components\";\n\n// ./types\nexport * from \"./types\";\n\n// ./themes\nexport * from \"./themes\";\n\n// ./components\nexport * from \"./components\";\n\n// ./hooks\nexport * from \"./hooks\";\n\n// ./hoc\nexport * from \"./hoc\";\n\n// ./utils\nexport * from \"../utils/_collections\";\n\nconst kitchn = styled;\nexport default kitchn;\n","import \"styled-components/native\";\n\nimport { MainTheme, Theme } from \"./types/theme\";\n\n// custom types\ndeclare module \"styled-components\" {\n  export interface DefaultTheme extends Theme, MainTheme {}\n}\n\nexport type * from \"styled-components/native/dist/types\";\n\n// custom exports\nexport {\n  ThemeConsumer,\n  ThemeContext as StyledThemeContext,\n  ThemeProvider as StyledThemeProvider,\n  css,\n  isStyledComponent,\n  useTheme as useStyledTheme,\n  withTheme,\n} from \"styled-components/native\";\n","import { MainTheme } from \"../types/theme\";\n\nexport const mainTheme: MainTheme = {\n  family: {\n    primary: \"Figtree\",\n    monospace: \"Figtree\",\n  },\n  weight: {\n    thin: 100,\n    extraLight: 200,\n    light: 300,\n    regular: 400,\n    medium: 500,\n    semiBold: 600,\n    bold: 700,\n    extraBold: 800,\n    black: 900,\n  },\n  size: {\n    extraTitle: \"48px\",\n    title: \"32px\",\n    large: \"24px\",\n    medium: \"18px\",\n    normal: \"16px\",\n    compact: \"14px\",\n    small: \"13px\",\n    tiny: \"11px\",\n  },\n  breakpoint: {\n    desktop: \"1824px\",\n    laptop: \"1224px\",\n    tablet: \"1024px\",\n    mobile: \"768px\",\n  },\n  gap: {\n    tiny: \"5px\",\n    small: \"10px\",\n    normal: \"15px\",\n    medium: \"20px\",\n    large: \"30px\",\n    extraLarge: \"60px\",\n  },\n  radius: {\n    square: \"8px\",\n    round: \"99999px\",\n  },\n};\n","import { DefaultTheme } from \"styled-components\";\n\nimport { mainTheme } from \"./main\";\nimport { darkTheme } from \"../../themes/dark\";\nimport { lightTheme } from \"../../themes/light\";\nimport { Theme } from \"../types/theme\";\n\nexport * from \"./main\";\nexport * from \"../../themes/dark\";\nexport * from \"../../themes/light\";\nexport * from \"../../themes/tonightpass\";\n\nexport const createTheme = (theme: Theme): DefaultTheme => {\n  return { ...mainTheme, ...theme };\n};\n\nexport const defaultThemes = {\n  dark: createTheme(darkTheme),\n  light: createTheme(lightTheme),\n};\n","import React from \"react\";\nimport { TouchableOpacityProps } from \"react-native/types\";\nimport styled from \"styled-components/native\";\n\nimport {\n  KitchnComponent,\n  NormalSizes,\n  AccentColors,\n  Text as KitchnText,\n  withScale,\n} from \"../..\";\n\ntype Props = {\n  shape?: \"square\" | \"round\";\n  size?: NormalSizes;\n  loading?: boolean;\n  disabled?: boolean;\n  width?: number | string;\n  prefix?: React.ReactNode;\n  suffix?: React.ReactNode;\n  type?: keyof AccentColors;\n  variant?: \"ghost\" | \"shadow\";\n  children?: string | React.ReactNode;\n};\n\nexport type ButtonProps = KitchnComponent<Props, TouchableOpacityProps>;\n\nconst ButtonComponent = ({\n  children,\n  size,\n  shape = \"square\",\n  prefix,\n  type,\n  variant,\n  suffix,\n  ...props\n}: ButtonProps) => {\n  const textColor =\n    props.loading || props.disabled\n      ? \"lightest\"\n      : type === \"light\"\n        ? \"darkest\"\n        : type === \"dark\"\n          ? \"lightest\"\n          : undefined;\n\n  return (\n    <Container\n      shape={shape}\n      size={size}\n      type={type}\n      variant={variant}\n      activeOpacity={0.9}\n      {...props}\n    >\n      {prefix && <Prefix>{prefix}</Prefix>}\n      {children && typeof children === \"string\" ? (\n        <KitchnText\n          color={textColor}\n          accent={\n            variant === \"ghost\"\n              ? type === \"light\"\n                ? \"light\"\n                : type === \"info\"\n                  ? \"info\"\n                  : type === \"success\"\n                    ? \"success\"\n                    : type === \"warning\"\n                      ? \"warning\"\n                      : type === \"danger\"\n                        ? \"danger\"\n                        : type === \"secondary\"\n                          ? \"secondary\"\n                          : type === \"primary\"\n                            ? \"primary\"\n                            : undefined\n              : !textColor\n                ? \"light\"\n                : undefined\n          }\n          size={\n            size === \"small\" ? \"small\" : size === \"large\" ? \"medium\" : \"normal\"\n          }\n          weight={\"bold\"}\n        >\n          {children}\n        </KitchnText>\n      ) : (\n        children\n      )}\n      {suffix && <Suffix>{suffix}</Suffix>}\n    </Container>\n  );\n};\n\nconst Container = styled.TouchableOpacity<ButtonProps>`\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: ${({ shape }) => (shape === \"round\" ? \"99999px\" : \"5px\")};\n\n  padding: ${(props) => {\n    switch (props.size) {\n      case \"small\":\n        return \"4px 8px\";\n      case \"large\":\n        return \"12px 16px\";\n      case \"normal\":\n      default:\n        return \"8px 12px\";\n    }\n  }};\n\n  background: ${(props) => {\n    if (props.loading || props.disabled)\n      return `${props.theme.colors.layout.darkest}`;\n\n    if (props.variant === \"ghost\") return \"transparent\";\n\n    switch (props.type) {\n      case \"dark\":\n        return props.theme.colors.layout.darkest;\n      case \"light\":\n        return props.theme.colors.layout.lightest;\n      case \"info\":\n        return props.theme.colors.accent.info;\n      case \"success\":\n        return props.theme.colors.accent.success;\n      case \"warning\":\n        return props.theme.colors.accent.warning;\n      case \"danger\":\n        return props.theme.colors.accent.danger;\n      case \"secondary\":\n        return props.theme.colors.accent.secondary;\n      case \"primary\":\n      default:\n        return props.theme.colors.accent.primary;\n    }\n  }};\n\n  border: ${(props) => {\n    if (props.loading || props.disabled)\n      return `1px solid ${props.theme.colors.layout.darker}`;\n\n    if (props.variant === \"ghost\") return \"1px solid transparent\";\n\n    switch (props.type) {\n      case \"dark\":\n        return `1px solid ${props.theme.colors.layout.darker}`;\n      case \"light\":\n        return `1px solid ${props.theme.colors.layout.lightest}`;\n      case \"info\":\n        return `1px solid ${props.theme.colors.accent.info}`;\n      case \"success\":\n        return `1px solid ${props.theme.colors.accent.success}`;\n      case \"warning\":\n        return `1px solid ${props.theme.colors.accent.warning}`;\n      case \"danger\":\n        return `1px solid ${props.theme.colors.accent.danger}`;\n      case \"secondary\":\n        return `1px solid ${props.theme.colors.accent.secondary}`;\n      case \"primary\":\n      default:\n        return `1px solid ${props.theme.colors.accent.secondary}`;\n    }\n  }};\n`;\n\nconst Prefix = styled.View`\n  margin-right: 7px;\n`;\n\nconst Suffix = styled.View`\n  margin-left: 7px;\n`;\n\nButtonComponent.displayName = \"KitchnButton\";\nexport const Button = withScale(ButtonComponent);\nexport default Button;\n","import React from \"react\";\nimport { View, ViewComponent } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport { isNumber } from \"../../../utils/isNumber\";\nimport { withScale } from \"../../hoc\";\nimport {\n  AccentColors,\n  Gap,\n  KitchnComponent,\n  LayoutColors,\n  Radius,\n} from \"../../types\";\n\ntype Props = {\n  row?: boolean;\n  flex?: number | string;\n  gap?: keyof Gap | number;\n  align?: \"center\" | \"flex-start\" | \"flex-end\" | \"stretch\" | \"baseline\";\n  justify?:\n    | \"center\"\n    | \"flex-start\"\n    | \"flex-end\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\"\n    | \"stretch\";\n  background?: string | keyof LayoutColors;\n  bg?: string | keyof LayoutColors;\n  backgroundColor?: keyof LayoutColors;\n  bgc?: keyof LayoutColors;\n  backgroundAccent?: keyof AccentColors;\n  bga?: keyof AccentColors;\n  borderRadius?: number | string | keyof Radius;\n  br?: number | string | keyof Radius;\n};\n\nexport type ContainerProps = KitchnComponent<Props, ViewComponent>;\n\nconst ContainerComponent = styled(({ children, ...props }: ContainerProps) => {\n  return <View {...props}>{children}</View>;\n})`\n  display: flex;\n  flex-direction: ${(props) => (props.row ? \"row\" : \"column\")};\n  max-width: 100%;\n  justify-content: ${(props) => props.justify || \"flex-start\"};\n  align-items: ${(props) => props.align || \"stretch\"};\n  background: ${(props) =>\n    props.theme.colors.layout[\n      (props.background || props.bg) as keyof LayoutColors\n    ] ||\n    props.background ||\n    props.bg ||\n    props.theme.colors.layout[\n      (props.backgroundColor || props.bgc) as keyof LayoutColors\n    ] ||\n    props.theme.colors.accent[\n      (props.backgroundAccent || props.bga) as keyof AccentColors\n    ] ||\n    \"transparent\"};\n  ${(props) =>\n    props.gap &&\n    `gap: ${props.theme.gap[props.gap as keyof Gap] || `${props.gap}px`};`}\n  ${(props) => props.flex && props.flex};\n  ${(props) =>\n    (props.borderRadius || props.br) &&\n    `border-radius: ${\n      props.theme.radius[(props.borderRadius || props.br) as keyof Radius] ||\n      (isNumber(props.borderRadius)\n        ? `${props.borderRadius || props.br}px`\n        : props.borderRadius || props.br)\n    };`}\n`;\n\nContainerComponent.displayName = \"KitchnContainer\";\nexport const Container = withScale(ContainerComponent);\nexport default Container;\n","import React from \"react\";\nimport styled, { DefaultTheme } from \"styled-components/native\";\n\nimport { isNumber } from \"../../utils/isNumber\";\nimport { Breakpoint, Gap, Size } from \"../types/theme\";\n\nexport type ScaleProps = {\n  width?: string | number | keyof Gap | keyof Breakpoint;\n  height?: string | number | keyof Gap | keyof Breakpoint;\n  padding?: string | number | keyof Gap;\n  margin?: string | number | keyof Gap;\n  w?: string | number | keyof Gap | keyof Breakpoint;\n  h?: string | number | keyof Gap | keyof Breakpoint;\n  p?: string | number | keyof Gap;\n  m?: string | number | keyof Gap;\n  paddingLeft?: string | number | keyof Gap;\n  paddingRight?: string | number | keyof Gap;\n  paddingTop?: string | number | keyof Gap;\n  paddingBottom?: string | number | keyof Gap;\n  pl?: string | number | keyof Gap;\n  pr?: string | number | keyof Gap;\n  pt?: string | number | keyof Gap;\n  pb?: string | number | keyof Gap;\n  marginLeft?: string | number | keyof Gap;\n  marginRight?: string | number | keyof Gap;\n  marginTop?: string | number | keyof Gap;\n  marginBottom?: string | number | keyof Gap;\n  ml?: string | number | keyof Gap;\n  mr?: string | number | keyof Gap;\n  mt?: string | number | keyof Gap;\n  mb?: string | number | keyof Gap;\n  px?: string | number | keyof Gap;\n  py?: string | number | keyof Gap;\n  mx?: string | number | keyof Gap;\n  my?: string | number | keyof Gap;\n  minWidth?: string | number | keyof Gap | keyof Breakpoint;\n  minHeight?: string | number | keyof Gap | keyof Breakpoint;\n  maxWidth?: string | number | keyof Gap | keyof Breakpoint;\n  maxHeight?: string | number | keyof Gap | keyof Breakpoint;\n  minW?: string | number | keyof Gap | keyof Breakpoint;\n  minH?: string | number | keyof Gap | keyof Breakpoint;\n  maxW?: string | number | keyof Gap | keyof Breakpoint;\n  maxH?: string | number | keyof Gap | keyof Breakpoint;\n  font?: string | number | keyof Size;\n};\n\nconst handleValue = (\n  theme: DefaultTheme,\n  value?: string | number | keyof Gap | keyof Breakpoint,\n) => {\n  return (\n    theme.gap[value as keyof Gap] ||\n    theme.breakpoint[value as keyof Breakpoint] ||\n    (isNumber(value) ? `${value}px` : value)\n  );\n};\n\nconst handleFont = (\n  theme: DefaultTheme,\n  value: string | number | keyof Size,\n) => {\n  return (\n    theme.size[value as keyof Size] || (isNumber(value) ? `${value}px` : value)\n  );\n};\n\nexport const withScale = <T extends object>(\n  WrappedComponent: React.ComponentType<T & ScaleProps>,\n) => {\n  return styled(WrappedComponent)<T & ScaleProps>`\n    ${({ theme, width, w }) =>\n      width || w ? `width: ${handleValue(theme, width || w)};` : \"\"}\n    ${({ theme, height, h }) =>\n      height || h ? `height: ${handleValue(theme, height || h)};` : \"\"}\n    ${({ theme, padding, p }) =>\n      padding || p ? `padding: ${handleValue(theme, padding || p)};` : \"\"}\n    ${({ theme, margin, m }) =>\n      margin || m ? `margin: ${handleValue(theme, margin || m)};` : \"\"}\n    ${({ theme, paddingLeft, pl, px }) =>\n      paddingLeft || pl || px\n        ? `padding-left: ${handleValue(theme, paddingLeft || pl || px)};`\n        : \"\"}\n    ${({ theme, paddingRight, pr, px }) =>\n      paddingRight || pr || px\n        ? `padding-right: ${handleValue(theme, paddingRight || pr || px)};`\n        : \"\"}\n    ${({ theme, paddingTop, pt, py }) =>\n      paddingTop || pt || py\n        ? `padding-top: ${handleValue(theme, paddingTop || pt || py)};`\n        : \"\"}\n    ${({ theme, paddingBottom, pb, py }) =>\n      paddingBottom || pb || py\n        ? `padding-bottom: ${handleValue(theme, paddingBottom || pb || py)};`\n        : \"\"}\n    ${({ theme, marginLeft, ml, mx }) =>\n      marginLeft || ml || mx\n        ? `margin-left: ${handleValue(theme, marginLeft || ml || mx)};`\n        : \"\"}\n    ${({ theme, marginRight, mr, mx }) =>\n      marginRight || mr || mx\n        ? `margin-right: ${handleValue(theme, marginRight || mr || mx)};`\n        : \"\"}\n    ${({ theme, marginTop, mt, my }) =>\n      marginTop || mt || my\n        ? `margin-top: ${handleValue(theme, marginTop || mt || my)};`\n        : \"\"}\n    ${({ theme, marginBottom, mb, my }) =>\n      marginBottom || mb || my\n        ? `margin-bottom: ${handleValue(theme, marginBottom || mb || my)};`\n        : \"\"}\n    ${({ theme, minWidth, minW }) =>\n      minWidth || minW\n        ? `min-width: ${handleValue(theme, minWidth || minW)};`\n        : \"\"}\n    ${({ theme, minHeight, minH }) =>\n      minHeight || minH\n        ? `min-height: ${handleValue(theme, minHeight || minH)};`\n        : \"\"}\n    ${({ theme, maxWidth, maxW }) =>\n      maxWidth || maxW\n        ? `max-width: ${handleValue(theme, maxWidth || maxW)};`\n        : \"\"}\n    ${({ theme, maxHeight, maxH }) =>\n      maxHeight || maxH\n        ? `max-height: ${handleValue(theme, maxHeight || maxH)};`\n        : \"\"}\n    ${({ theme, font }) =>\n      font ? `font-size: ${handleFont(theme, font)};` : \"\"}\n  `;\n};\n","import React from \"react\";\nimport RemixIcon from \"react-native-remix-icon\";\n\nimport { withScale } from \"../../hoc\";\nimport { useTheme } from \"../../hooks\";\nimport { AccentColors, KitchnComponent, Size, TextColors } from \"../../types\";\n\ntype Props = {\n  name: string;\n  size?: number | string | keyof Size;\n  fill?: boolean;\n  /**\n   * The text color. Strictly limited to colors of our design system. If you want to pass accent color make sure to pass `accent` instead of `color`.\n   */\n  color?: keyof TextColors | string;\n  /**\n   * The accent color. Strictly limited to colors of our design system, but can be used in combination with `color` prop.\n   */\n  accent?: keyof AccentColors;\n};\n\nexport type IconProps = KitchnComponent<Props>;\n\nconst IconComponent = ({\n  name,\n  size = \"normal\",\n  fill,\n  color,\n  accent,\n  ...props\n}: IconProps) => {\n  const { theme } = useTheme();\n  return (\n    <RemixIcon\n      name={`${name}-${fill ? \"fill\" : \"line\"}`}\n      size={theme.size[size as keyof Size] || size || theme.size.normal}\n      color={\n        theme.colors.accent[accent as keyof AccentColors] ||\n        theme.colors.text[color as keyof TextColors] ||\n        color ||\n        theme.colors.text.lightest\n      }\n      {...props}\n    />\n  );\n};\n\nIconComponent.displayName = \"KitchnIcon\";\nexport const Icon = withScale(IconComponent);\nexport default Icon;\n","import React from \"react\";\n\nimport { ThemeContext } from \"../contexts/Theme\";\n\nexport const useTheme = () => {\n  const context = React.useContext(ThemeContext);\n\n  return { ...context };\n};\n","import React from \"react\";\nimport { useColorScheme } from \"react-native\";\nimport {\n  DefaultTheme,\n  ThemeProvider as StyledThemeProvider,\n} from \"styled-components/native\";\n\nimport { defaultThemes } from \"../themes\";\n\nconst ThemeContext = React.createContext({\n  theme: defaultThemes.dark,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setTheme: (_theme: DefaultTheme) => {},\n});\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  theme?: DefaultTheme;\n};\n\n/**\n * System: 0\n * Dark: 1\n * Light: 2\n */\n\nconst ThemeProvider = ({\n  children,\n  theme: customTheme,\n  ...props\n}: ThemeProviderProps) => {\n  const colorScheme = useColorScheme();\n\n  const isDarkTheme = colorScheme === \"dark\";\n\n  const [theme, setTheme] = React.useState<DefaultTheme>(\n    customTheme || (isDarkTheme ? defaultThemes.dark : defaultThemes.light),\n  );\n\n  React.useEffect(() => {\n    if (customTheme) {\n      setTheme(customTheme);\n    } else if (!isDarkTheme) {\n      setTheme(defaultThemes.light);\n    } else {\n      setTheme(defaultThemes.dark);\n    }\n  }, [customTheme, isDarkTheme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }} {...props}>\n      <StyledThemeProvider theme={theme}>{children}</StyledThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport { ThemeContext, ThemeProvider };\n","import React from \"react\";\nimport {\n  TextInput,\n  TextInputProps,\n  NativeSyntheticEvent,\n  TextInputChangeEventData,\n  TextInputFocusEventData,\n  // GestureResponderEvent, because\n} from \"react-native/types\";\nimport styled, { useTheme } from \"styled-components/native\";\n\nimport { capitalize } from \"../../../utils/capitalize\";\nimport { convertRGBToRGBA } from \"../../../utils/convertRGBToRGBA\";\nimport { isNumber } from \"../../../utils/isNumber\";\nimport { withScale } from \"../../hoc/withScale\";\nimport { AccentColors, KitchnComponent, NormalSizes } from \"../../types\";\nimport Icon, { IconProps } from \"../Icon\";\nimport Text from \"../Text\";\n\ntype Props = {\n  name?: string;\n  placeholder?: string;\n  size?: NormalSizes;\n  prefix?: JSX.Element | string;\n  suffix?: JSX.Element | string;\n  initialValue?: string;\n  value?: string;\n  disabled?: boolean;\n  prefixStyling?: boolean;\n  suffixStyling?: boolean;\n  prefixContainer?: boolean;\n  suffixContainer?: boolean;\n  clearable?: boolean;\n  width?: number | string;\n  error?: string;\n  readOnly?: boolean;\n  // temporary any because 0.70.6 is not compatible with 0.73.0\n  onClearClick?: (_event: any /* GestureResponderEvent */) => void;\n  type?: keyof AccentColors;\n  label?: string;\n  onChange?: (_event: NativeSyntheticEvent<InputChangeEventData>) => void;\n  onChangeText?: (_value: string) => void;\n  pattern?: { [key: string]: RegExp };\n};\n\nexport type InputProps = KitchnComponent<Props, TextInputProps>;\n\nexport type InputChangeEventData = TextInputChangeEventData & {\n  name?: string;\n  pattern?: { [key: string]: RegExp };\n};\n\nconst defaultProps: Props = {\n  size: \"normal\",\n  disabled: false,\n  prefixStyling: true,\n  suffixStyling: true,\n  prefixContainer: true,\n  suffixContainer: true,\n  clearable: false,\n  initialValue: \"\",\n  readOnly: false,\n};\n\nconst InputComponent: React.FC<InputProps> = React.forwardRef<\n  TextInput,\n  React.PropsWithChildren<InputProps>\n>(\n  (\n    {\n      name,\n      size,\n      prefix,\n      suffix,\n      disabled,\n      prefixContainer,\n      suffixContainer,\n      prefixStyling,\n      suffixStyling,\n      clearable,\n      value,\n      initialValue,\n      readOnly,\n      onChange,\n      onChangeText,\n      width,\n      onClearClick,\n      onFocus,\n      onBlur,\n      error,\n      type,\n      label,\n      pattern,\n      ...props\n    }: InputProps & typeof defaultProps,\n    ref: React.ForwardedRef<TextInput>,\n  ) => {\n    const theme = useTheme();\n    const inputRef = React.useRef<TextInput>(null);\n    React.useImperativeHandle(ref, () => inputRef.current as TextInput);\n\n    const [selfValue, setSelfValue] = React.useState<string | undefined>(\n      initialValue,\n    );\n    const isControlledComponent = React.useMemo(\n      () => value !== undefined,\n      [value],\n    );\n    const [focus, setFocus] = React.useState<boolean>(false);\n\n    const handleChange = (\n      event: NativeSyntheticEvent<InputChangeEventData>,\n    ) => {\n      event.nativeEvent.name = name;\n      event.nativeEvent.pattern = pattern;\n      if (disabled || readOnly) return;\n      setSelfValue(event.nativeEvent.text);\n      onChange && onChange(event);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (disabled || readOnly) return;\n      setSelfValue(value);\n      onChangeText && onChangeText(value);\n    };\n\n    const handleFocus = (\n      event: NativeSyntheticEvent<TextInputFocusEventData>,\n    ) => {\n      if (disabled || readOnly) return;\n      setFocus(true);\n      onFocus && onFocus(event);\n    };\n\n    const handleBlur = (\n      event: NativeSyntheticEvent<TextInputFocusEventData>,\n    ) => {\n      if (disabled || readOnly) return;\n      setFocus(false);\n      onBlur && onBlur(event);\n    };\n\n    const handleClear = (event: any /* GestureResponderEvent */) => {\n      if (disabled || readOnly) return;\n      setSelfValue(\"\");\n      onClearClick && onClearClick(event);\n      if (!inputRef.current) return;\n\n      inputRef.current.clear();\n      inputRef.current.focus();\n      onChange && onChange(event as any);\n      onChangeText && onChangeText(\"\");\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(() => {\n      if (isControlledComponent) {\n        setSelfValue(value as string);\n      }\n    });\n\n    const controlledValue = isControlledComponent\n      ? { value: selfValue }\n      : { defaultValue: initialValue };\n\n    const inputProps = {\n      ...props,\n      ...controlledValue,\n    };\n\n    return (\n      <Wrapper>\n        {label && (\n          <Text size={\"small\"} weight={\"medium\"} color={\"light\"} mb={\"tiny\"}>\n            {label}\n          </Text>\n        )}\n        <Container disabled={disabled} width={width} size={size}>\n          {prefix && prefixContainer && (\n            <Prefix\n              size={size}\n              disabled={disabled}\n              prefixStyling={prefixStyling}\n              focus={focus}\n              error={error}\n              type={type}\n            >\n              {prefix}\n            </Prefix>\n          )}\n          <Field\n            ref={inputRef}\n            size={size}\n            prefix={prefix}\n            suffix={suffix}\n            prefixContainer={prefixContainer}\n            suffixContainer={suffixContainer}\n            prefixStyling={prefixStyling}\n            suffixStyling={suffixStyling}\n            disabled={disabled}\n            clearable={clearable}\n            error={error}\n            focus={focus}\n            type={type}\n            value={value}\n            selfValue={selfValue}\n            onChange={handleChange}\n            onChangeText={handleChangeText}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            readOnly={readOnly}\n            {...inputProps}\n            placeholderTextColor={\n              error\n                ? convertRGBToRGBA(theme.colors.accent.danger, 0.5)\n                : type\n                  ? convertRGBToRGBA(theme.colors.accent[type], 0.5)\n                  : theme.colors.text.light\n            }\n            {...props}\n          />\n          {clearable && selfValue !== undefined && (\n            <Clear\n              size={size}\n              disabled={disabled}\n              suffix={suffix}\n              suffixContainer={suffixContainer}\n              suffixStyling={suffixStyling}\n              error={error}\n              focus={focus}\n              type={type}\n              onPress={handleClear}\n            >\n              <ClearIcon\n                name={\"close-circle\"}\n                size={\n                  size === \"large\"\n                    ? \"normal\"\n                    : size === \"small\"\n                      ? \"tiny\"\n                      : \"small\"\n                }\n                visible={Boolean(selfValue !== \"\")}\n                fill\n              />\n            </Clear>\n          )}\n          {suffix && (\n            <Suffix\n              size={size}\n              disabled={disabled}\n              suffixStyling={suffixStyling}\n              focus={focus}\n              error={error}\n              type={type}\n            >\n              {suffix}\n            </Suffix>\n          )}\n        </Container>\n        {error && (\n          <Text\n            size={\n              size === \"small\" ? \"tiny\" : size === \"large\" ? \"small\" : \"small\"\n            }\n            width={width}\n            accent={\"danger\"}\n            mt={\"tiny\"}\n          >\n            {error}\n          </Text>\n        )}\n      </Wrapper>\n    );\n  },\n);\n\nconst Wrapper = styled.View``;\n\nconst Container = styled.View<{\n  disabled: InputProps[\"disabled\"];\n  width: InputProps[\"width\"];\n  size: InputProps[\"size\"];\n}>`\n  flex-direction: row;\n  align-items: center;\n  width: ${({ width }) =>\n    width ? (isNumber(width) ? `${width}px` : width) : \"100%\"};\n  max-width: 100%;\n  font-size: ${({ size, theme }) => {\n    switch (size) {\n      case \"small\":\n        return theme.size.tiny;\n      case \"large\":\n        return theme.size.normal;\n      case \"normal\":\n      default:\n        return theme.size.small;\n    }\n  }};\n  border-radius: ${({ theme }) => theme.radius.square};\n`;\n\nconst Field = styled.TextInput<\n  InputProps & {\n    ref: React.ForwardedRef<TextInput>;\n    focus: boolean;\n    selfValue: string | undefined;\n  }\n>`\n  font-family: ${({ theme }) => {\n    const weight = \"regular\";\n    return `${theme.family.primary}_${theme.weight[weight]}${capitalize(\n      weight,\n    )}`;\n  }};\n  flex: 1;\n  min-width: 0;\n  border-radius: ${({ theme }) => theme.radius.square};\n  color: ${({ theme, error, type }) =>\n    error\n      ? theme.colors.accent.danger\n      : type\n        ? theme.colors.accent[type]\n        : theme.colors.text.lightest};\n  background-color: ${({ theme, disabled }) =>\n    disabled ? theme.colors.layout.darker : theme.colors.layout.darkest};\n\n  padding: 0 ${({ theme }) => theme.gap.small};\n  height: ${(props) => {\n    switch (props.size) {\n      case \"small\":\n        return \"30px\";\n      case \"large\":\n        return \"50px\";\n      case \"normal\":\n      default:\n        return \"40px\";\n    }\n  }};\n\n  border: 1px solid\n    ${({ theme, error, focus, type }) =>\n      error\n        ? theme.colors.accent.danger\n        : type\n          ? theme.colors.accent[type]\n          : focus\n            ? theme.colors.layout.lighter\n            : theme.colors.layout.dark};\n\n  ${({ prefix, prefixContainer }) =>\n    prefix &&\n    prefixContainer &&\n    `\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  `}\n  ${({ suffix, suffixContainer, clearable, selfValue }) =>\n    ((suffix && suffixContainer) || (clearable && selfValue !== undefined)) &&\n    `\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  `}\n  ${({ prefix, prefixContainer, prefixStyling }) =>\n    prefix && prefixContainer && !prefixStyling && \"border-left-width: 0;\"}\n  ${({ suffix, suffixContainer, suffixStyling, clearable, selfValue }) =>\n    ((suffix && suffixContainer && !suffixStyling) ||\n      (clearable && selfValue !== undefined)) &&\n    \"border-right-width: 0;\"}\n`;\n\nconst Prefix = styled.View<{\n  size: InputProps[\"size\"];\n  disabled: InputProps[\"disabled\"];\n  prefixStyling: InputProps[\"prefixStyling\"];\n  error: InputProps[\"error\"];\n  focus: boolean;\n  type: InputProps[\"type\"];\n}>`\n  flex-direction: row;\n  align-items: center;\n  flex-shrink: 0;\n  border: 1px solid\n    ${({ theme, error, focus, prefixStyling, type }) =>\n      error && !prefixStyling\n        ? theme.colors.accent.danger\n        : type && !prefixStyling\n          ? theme.colors.accent[type]\n          : focus && !prefixStyling\n            ? theme.colors.layout.lighter\n            : theme.colors.layout.dark};\n  border-right-width: 0;\n  border-top-left-radius: ${({ theme }) => theme.radius.square};\n  border-bottom-left-radius: ${({ theme }) => theme.radius.square};\n  padding: 0 ${({ theme }) => theme.gap.small};\n  background-color: ${({ theme, prefixStyling, disabled }) =>\n    prefixStyling || disabled\n      ? theme.colors.layout.darker\n      : theme.colors.layout.darkest};\n  height: ${(props) => {\n    switch (props.size) {\n      case \"small\":\n        return \"30px\";\n      case \"large\":\n        return \"50px\";\n      case \"normal\":\n      default:\n        return \"40px\";\n    }\n  }};\n`;\n\nconst Suffix = styled.View<{\n  size: InputProps[\"size\"];\n  disabled: InputProps[\"disabled\"];\n  suffixStyling: InputProps[\"suffixStyling\"];\n  error: InputProps[\"error\"];\n  focus: boolean;\n  type: InputProps[\"type\"];\n}>`\n  flex-direction: row;\n  align-items: center;\n  flex-shrink: 0;\n  border: 1px solid\n    ${({ theme, error, focus, suffixStyling, type }) =>\n      error && !suffixStyling\n        ? theme.colors.accent.danger\n        : type && !suffixStyling\n          ? theme.colors.accent[type]\n          : focus && !suffixStyling\n            ? theme.colors.layout.lighter\n            : theme.colors.layout.dark};\n  border-left-width: 0;\n  border-top-right-radius: ${({ theme }) => theme.radius.square};\n  border-bottom-right-radius: ${({ theme }) => theme.radius.square};\n  ${({ theme }) => theme.radius.square} 0;\n  padding: 0 ${({ theme }) => theme.gap.small};\n  background-color: ${({ theme, suffixStyling, disabled }) =>\n    suffixStyling || disabled\n      ? theme.colors.layout.darker\n      : theme.colors.layout.darkest};\n  height: ${(props) => {\n    switch (props.size) {\n      case \"small\":\n        return \"30px\";\n      case \"large\":\n        return \"50px\";\n      case \"normal\":\n      default:\n        return \"40px\";\n    }\n  }};\n`;\n\nconst Clear = styled.Pressable<{\n  disabled: InputProps[\"disabled\"];\n  size: InputProps[\"size\"];\n  suffix: InputProps[\"suffix\"];\n  suffixContainer: InputProps[\"suffixContainer\"];\n  suffixStyling: InputProps[\"suffixStyling\"];\n  error: InputProps[\"error\"];\n  focus: boolean;\n  type: InputProps[\"type\"];\n}>`\n  flex-direction: row;\n  align-items: center;\n  flex-shrink: 0;\n  color: ${({ theme }) => theme.colors.text.light};\n  border: 1px solid\n    ${({ theme, error, focus, type }) =>\n      error\n        ? theme.colors.accent.danger\n        : type\n          ? theme.colors.accent[type]\n          : focus\n            ? theme.colors.layout.lighter\n            : theme.colors.layout.dark};\n  border-left-width: 0;\n  padding-right: ${({ theme }) => theme.gap.small};\n  background-color: ${({ theme, disabled }) =>\n    disabled ? theme.colors.layout.darker : theme.colors.layout.darkest};\n  ${({ theme, suffix, suffixContainer }) =>\n    suffix && suffixContainer\n      ? `\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  `\n      : `\n    border-top-right-radius: ${theme.radius.square};\n    border-bottom-right-radius: ${theme.radius.square};\n  `}\n  ${({ suffix, suffixContainer, suffixStyling }) =>\n    suffix && suffixContainer && !suffixStyling && \"border-right-width: 0;\"}\n  height: ${(props) => {\n    switch (props.size) {\n      case \"small\":\n        return \"30px\";\n      case \"large\":\n        return \"50px\";\n      case \"normal\":\n      default:\n        return \"40px\";\n    }\n  }};\n`;\n\nconst ClearIcon = styled(Icon)<\n  IconProps & {\n    visible: boolean;\n  }\n>`\n  ${({ visible }) => `opacity: ${visible ? 1 : 0};`}\n`;\n\nInputComponent.defaultProps = defaultProps;\nInputComponent.displayName = \"KitchnInput\";\nconst Input = withScale(InputComponent);\nexport default Input;\n","import React from \"react\";\nimport { Text as NText, TextProps as NTextProps } from \"react-native\";\nimport styled from \"styled-components/native\";\n\nimport { capitalize } from \"../../../utils/capitalize\";\nimport { withScale } from \"../../hoc\";\nimport { KitchnComponent } from \"../../types\";\nimport { AccentColors, Size, TextColors, Weight } from \"../../types/theme\";\n\ntype Props = {\n  /**\n   * The font size.\n   */\n  size?: keyof Size;\n  /**\n   * The line height.\n   */\n  lineHeight?: number | string;\n  /**\n   * The font weight.\n   */\n  weight?: keyof Weight;\n  /**\n   * Text transform short hand.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform\n   * @default \"initial\"\n   */\n  transform?: \"capitalize\" | \"uppercase\" | \"lowercase\" | \"none\";\n  /**\n   * The text color. Strictly limited to colors of our design system. If you want to pass accent color make sure to pass `accent` instead of `color`.\n   */\n  color?: keyof TextColors;\n  /**\n   * The accent color. Strictly limited to colors of our design system, but can be used in combination with `color` prop.\n   */\n  accent?: keyof AccentColors;\n  /**\n   * Truncate a single or multiple line(s). If you pass truncate, make sure to pass `title` so that the full value is shown on hover.\n   * @default false\n   */\n  truncate?: boolean | number;\n  /**\n   * Text alignment short hand.\n   */\n  align?: \"left\" | \"center\" | \"right\";\n  /**\n   * If text is `truncated`, this should be the full text.\n   */\n  title?: string;\n  /**\n   * Whether the text should wrap lines\n   * @type {boolean}\n   * @default true\n   */\n  wrap?: boolean;\n  /**\n   * \tWhether to use the monospace font.\n   * @type {boolean}\n   * @default false\n   */\n  monospace?: boolean;\n};\n\nexport type TextProps = KitchnComponent<Props, NTextProps>;\n\nconst TextComponent = styled(({ children, truncate, ...props }: TextProps) => {\n  return (\n    <NText\n      numberOfLines={truncate ? 1 : undefined}\n      ellipsizeMode={truncate ? \"tail\" : undefined}\n      {...props}\n    >\n      {children}\n    </NText>\n  );\n})<TextProps>`\n  font-size: ${(props) => props.theme.size[props.size || \"normal\"]};\n  color: ${(props) =>\n    props.theme.colors.accent[props.accent as keyof AccentColors] ||\n    props.theme.colors.text[props.color as keyof TextColors] ||\n    props.theme.colors.text.lightest};\n  };\n  text-align: ${(props) => props.align || \"left\"};\n  text-transform: ${(props) => props.transform || \"none\"};\n  line-height: ${(props) => {\n    const lineHeight = props.lineHeight || 1.25;\n    const fontSize = parseInt(\n      props.theme.size[props.size || \"normal\"].replace(\"px\", \"\"),\n      10,\n    );\n\n    return typeof lineHeight === \"number\"\n      ? `${lineHeight * fontSize}px`\n      : lineHeight;\n  }};\n  font-family: ${({ theme, weight = \"regular\", monospace }) => {\n    return `${monospace ? theme.family.monospace : theme.family.primary}_${\n      theme.weight[weight]\n    }${capitalize(weight)}`;\n  }};\n`;\n\nTextComponent.displayName = \"KitchnText\";\nexport const Text = withScale(TextComponent);\nexport default Text;\n","import React from \"react\";\nimport { DefaultTheme } from \"styled-components/native\";\n\nimport { ThemeProvider } from \"../../contexts/Theme\";\nimport { withScale } from \"../../hoc\";\n\nexport type KitchnProviderProps = {\n  children?: React.ReactNode;\n  theme?: DefaultTheme;\n};\n\nconst KitchnProviderComponent: React.FC<KitchnProviderProps> = ({\n  children,\n  theme,\n}: KitchnProviderProps) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nKitchnProviderComponent.displayName = \"KitchnProvider\";\nexport const KitchnProvider = withScale(KitchnProviderComponent);\nexport default KitchnProvider;\n"],"mappings":"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","names":["styled","ThemeConsumer","ThemeContext","ThemeProvider","css","isStyledComponent","useTheme","withTheme","mainTheme","createTheme","theme","mainTheme","defaultThemes","darkTheme","lightTheme","React","styled","ButtonComponent","children","size","shape","prefix","type","variant","suffix","props","textColor","React","Container","Prefix","Text","Suffix","styled","Button","withScale","React","View","styled","styled","handleValue","theme","value","isNumber","handleFont","withScale","WrappedComponent","styled","width","w","height","h","padding","p","margin","m","paddingLeft","pl","px","paddingRight","pr","paddingTop","pt","py","paddingBottom","pb","marginLeft","ml","mx","marginRight","mr","marginTop","mt","my","marginBottom","mb","minWidth","minW","minHeight","minH","maxWidth","maxW","maxHeight","maxH","font","ContainerComponent","styled","children","props","React","View","isNumber","Container","withScale","React","RemixIcon","React","React","useColorScheme","StyledThemeProvider","ThemeContext","React","defaultThemes","_theme","ThemeProvider","children","customTheme","props","isDarkTheme","useColorScheme","theme","setTheme","StyledThemeProvider","useTheme","React","ThemeContext","IconComponent","name","size","fill","color","accent","props","theme","useTheme","React","RemixIcon","Icon","withScale","Icon_default","React","styled","useTheme","React","NText","styled","TextComponent","styled","children","truncate","props","React","NText","lineHeight","fontSize","theme","weight","monospace","capitalize","Text","withScale","Text_default","defaultProps","InputComponent","React","name","size","prefix","suffix","disabled","prefixContainer","suffixContainer","prefixStyling","suffixStyling","clearable","value","initialValue","readOnly","onChange","onChangeText","width","onClearClick","onFocus","onBlur","error","type","label","pattern","props","ref","theme","useTheme","inputRef","selfValue","setSelfValue","isControlledComponent","focus","setFocus","handleChange","event","handleChangeText","handleFocus","handleBlur","handleClear","inputProps","Wrapper","Text_default","Container","Prefix","Field","convertRGBToRGBA","Clear","ClearIcon","Suffix","styled","isNumber","weight","capitalize","Icon_default","visible","Input","withScale","React","KitchnProviderComponent","children","theme","React","ThemeProvider","KitchnProvider","withScale","kitchn","styled","native_default"]}