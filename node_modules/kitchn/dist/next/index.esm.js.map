{"version":3,"sources":["../../src/next/components/Document/index.tsx","../../src/next/components/Registry/index.tsx","../../src/next/hoc/withKitchnConfig.ts"],"sourcesContent":["import Document, { DocumentContext, DocumentInitialProps } from \"next/document\";\nimport React from \"react\";\nimport { ServerStyleSheet } from \"styled-components\";\n\nexport class KitchnDocument extends Document {\n  static async getInitialProps(\n    ctx: DocumentContext,\n  ): Promise<DocumentInitialProps> {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: (App) => (props) =>\n            sheet.collectStyles(<App {...props} />),\n        });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          </>\n        ),\n      };\n    } finally {\n      sheet.seal();\n    }\n  }\n}\n","import { useServerInsertedHTML } from \"next/navigation\";\nimport React from \"react\";\n\nimport {\n  ServerStyleSheet,\n  StyleSheetManager,\n} from \"../../../styled-components\";\n\nexport type KitchnRegistryProps = {\n  children?: React.ReactNode;\n};\n\nexport const KitchnRegistry: React.FC<KitchnRegistryProps> = ({\n  children,\n}: KitchnRegistryProps) => {\n  // Only create stylesheet once with lazy initial state\n  // x-ref: https://reactjs.org/docs/hooks-reference.html#lazy-initial-state\n  const [styledComponentsStyleSheet] = React.useState(\n    () => new ServerStyleSheet(),\n  );\n\n  useServerInsertedHTML(() => {\n    const styles = styledComponentsStyleSheet.getStyleElement();\n    styledComponentsStyleSheet.instance.clearTag();\n    return <>{styles}</>;\n  });\n\n  if (typeof window !== \"undefined\") return <>{children}</>;\n\n  return (\n    <StyleSheetManager sheet={styledComponentsStyleSheet.instance}>\n      {children}\n    </StyleSheetManager>\n  );\n};\n","import { NextConfig } from \"next/types\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst withKitchnConfig = (nextConfig: NextConfig | any = {}) => {\n  return {\n    ...nextConfig,\n    reactStrictMode: true,\n    compiler: {\n      styledComponents: true,\n    },\n  };\n};\n\nexport default withKitchnConfig;\n"],"mappings":";oDAAA,OAAOA,MAAyD,gBAChE,OAAOC,MAAW,QAClB,OAAS,oBAAAC,MAAwB,oBAE1B,IAAMC,EAAN,cAA6BH,CAAS,CAC3C,aAAa,gBACXI,EAC+B,CAC/B,IAAMC,EAAQ,IAAIH,EACZI,EAAqBF,EAAI,WAE/B,GAAI,CACFA,EAAI,WAAa,IACfE,EAAmB,CACjB,WAAaC,GAASC,GACpBH,EAAM,cAAcJ,EAAA,cAACM,EAAA,CAAK,GAAGC,EAAO,CAAE,CAC1C,CAAC,EAEH,IAAMC,EAAe,MAAMT,EAAS,gBAAgBI,CAAG,EACvD,MAAO,CACL,GAAGK,EACH,OACER,EAAA,cAAAA,EAAA,cACGQ,EAAa,OACbJ,EAAM,gBAAgB,CACzB,CAEJ,CACF,QAAE,CACAA,EAAM,KAAK,CACb,CACF,CACF,EChCA,OAAS,yBAAAK,MAA6B,kBACtC,OAAOC,MAAW,QAWX,IAAMC,EAAgD,CAAC,CAC5D,SAAAC,CACF,IAA2B,CAGzB,GAAM,CAACC,CAA0B,EAAIC,EAAM,SACzC,IAAM,IAAIC,CACZ,EAQA,OANAC,EAAsB,IAAM,CAC1B,IAAMC,EAASJ,EAA2B,gBAAgB,EAC1D,OAAAA,EAA2B,SAAS,SAAS,EACtCC,EAAA,cAAAA,EAAA,cAAGG,CAAO,CACnB,CAAC,EAEG,OAAO,OAAW,IAAoBH,EAAA,cAAAA,EAAA,cAAGF,CAAS,EAGpDE,EAAA,cAACI,EAAA,CAAkB,MAAOL,EAA2B,UAClDD,CACH,CAEJ,EC/BA,IAAMO,EAAmB,CAACC,EAA+B,CAAC,KACjD,CACL,GAAGA,EACH,gBAAiB,GACjB,SAAU,CACR,iBAAkB,EACpB,CACF,GAGKC,EAAQF","names":["Document","React","ServerStyleSheet","KitchnDocument","ctx","sheet","originalRenderPage","App","props","initialProps","useServerInsertedHTML","React","KitchnRegistry","children","styledComponentsStyleSheet","React","ServerStyleSheet","useServerInsertedHTML","styles","StyleSheetManager","withKitchnConfig","nextConfig","withKitchnConfig_default"]}