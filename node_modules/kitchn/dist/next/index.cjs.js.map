{"version":3,"sources":["/home/runner/work/kitchn/kitchn/packages/kitchn/dist/next/index.cjs.js","../../src/next/components/Document/index.tsx","../../src/next/components/Registry/index.tsx","../../src/next/hoc/withKitchnConfig.ts"],"names":["KitchnDocument","Document","ctx","sheet","ServerStyleSheet","originalRenderPage","App","props","React","initialProps","KitchnRegistry","children","styledComponentsStyleSheet","useServerInsertedHTML","styles","StyleSheetManager","withKitchnConfig","nextConfig","withKitchnConfig_default"],"mappings":"AAAA;AACA,8DAAmD,6FCDa,4EAC9C,qDACe,IAEpBA,CAAAA,CAAN,MAAA,QAA6BC,kBAAS,CAC3C,OAAA,MAAa,eAAA,CACXC,CAAAA,CAC+B,CAC/B,IAAMC,CAAAA,CAAQ,IAAIC,kCAAAA,CACZC,CAAAA,CAAqBH,CAAAA,CAAI,UAAA,CAE/B,GAAI,CACFA,CAAAA,CAAI,UAAA,CAAa,CAAA,CAAA,EACfG,CAAAA,CAAmB,CACjB,UAAA,CAAaC,CAAAA,EAASC,CAAAA,EACpBJ,CAAAA,CAAM,aAAA,CAAcK,eAAAA,CAAA,aAAA,CAACF,CAAAA,CAAA,CAAK,GAAGC,CAAAA,CAAO,CAAE,CAC1C,CAAC,CAAA,CAEH,IAAME,CAAAA,CAAe,MAAMR,kBAAAA,CAAS,eAAA,CAAgBC,CAAG,CAAA,CACvD,MAAO,CACL,GAAGO,CAAAA,CACH,MAAA,CACED,eAAAA,CAAA,aAAA,CAAAA,eAAAA,CAAA,QAAA,CAAA,IAAA,CACGC,CAAAA,CAAa,MAAA,CACbN,CAAAA,CAAM,eAAA,CAAgB,CACzB,CAEJ,CACF,CAAA,OAAE,CACAA,CAAAA,CAAM,IAAA,CAAK,CACb,CACF,CACF,CAAA,CChCA,6CAAsC,IAYzBO,CAAAA,CAAgD,CAAC,CAC5D,QAAA,CAAAC,CACF,CAAA,CAAA,EAA2B,CAGzB,GAAM,CAACC,CAA0B,CAAA,CAAIJ,eAAAA,CAAM,QAAA,CACzC,CAAA,CAAA,EAAM,IAAIJ,qBACZ,CAAA,CAQA,OANAS,+CAAAA,CAAsB,CAAA,EAAM,CAC1B,IAAMC,CAAAA,CAASF,CAAAA,CAA2B,eAAA,CAAgB,CAAA,CAC1D,OAAAA,CAAAA,CAA2B,QAAA,CAAS,QAAA,CAAS,CAAA,CACtCJ,eAAAA,CAAA,aAAA,CAAAA,eAAAA,CAAA,QAAA,CAAA,IAAA,CAAGM,CAAO,CACnB,CAAC,CAAA,CAEG,OAAO,MAAA,CAAW,GAAA,CAAoBN,eAAAA,CAAA,aAAA,CAAAA,eAAAA,CAAA,QAAA,CAAA,IAAA,CAAGG,CAAS,CAAA,CAGpDH,eAAAA,CAAA,aAAA,CAACO,qBAAAA,CAAA,CAAkB,KAAA,CAAOH,CAAAA,CAA2B,QAAA,CAAA,CAClDD,CACH,CAEJ,CAAA,CC/BA,IAAMK,CAAAA,CAAmB,CAACC,CAAAA,CAA+B,CAAC,CAAA,CAAA,EAAA,CACjD,CACL,GAAGA,CAAAA,CACH,eAAA,CAAiB,CAAA,CAAA,CACjB,QAAA,CAAU,CACR,gBAAA,CAAkB,CAAA,CACpB,CACF,CAAA,CAAA,CAGKC,CAAAA,4BAAQF,CAAAA,CAAAA,qFAAAA","file":"/home/runner/work/kitchn/kitchn/packages/kitchn/dist/next/index.cjs.js","sourcesContent":[null,"import Document, { DocumentContext, DocumentInitialProps } from \"next/document\";\nimport React from \"react\";\nimport { ServerStyleSheet } from \"styled-components\";\n\nexport class KitchnDocument extends Document {\n  static async getInitialProps(\n    ctx: DocumentContext,\n  ): Promise<DocumentInitialProps> {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: (App) => (props) =>\n            sheet.collectStyles(<App {...props} />),\n        });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          </>\n        ),\n      };\n    } finally {\n      sheet.seal();\n    }\n  }\n}\n","import { useServerInsertedHTML } from \"next/navigation\";\nimport React from \"react\";\n\nimport {\n  ServerStyleSheet,\n  StyleSheetManager,\n} from \"../../../styled-components\";\n\nexport type KitchnRegistryProps = {\n  children?: React.ReactNode;\n};\n\nexport const KitchnRegistry: React.FC<KitchnRegistryProps> = ({\n  children,\n}: KitchnRegistryProps) => {\n  // Only create stylesheet once with lazy initial state\n  // x-ref: https://reactjs.org/docs/hooks-reference.html#lazy-initial-state\n  const [styledComponentsStyleSheet] = React.useState(\n    () => new ServerStyleSheet(),\n  );\n\n  useServerInsertedHTML(() => {\n    const styles = styledComponentsStyleSheet.getStyleElement();\n    styledComponentsStyleSheet.instance.clearTag();\n    return <>{styles}</>;\n  });\n\n  if (typeof window !== \"undefined\") return <>{children}</>;\n\n  return (\n    <StyleSheetManager sheet={styledComponentsStyleSheet.instance}>\n      {children}\n    </StyleSheetManager>\n  );\n};\n","import { NextConfig } from \"next/types\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst withKitchnConfig = (nextConfig: NextConfig | any = {}) => {\n  return {\n    ...nextConfig,\n    reactStrictMode: true,\n    compiler: {\n      styledComponents: true,\n    },\n  };\n};\n\nexport default withKitchnConfig;\n"]}